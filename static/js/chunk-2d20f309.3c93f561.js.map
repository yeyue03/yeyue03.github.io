{"version":3,"sources":["webpack:///./src/views/project/charts/chartPanel/LineChart.vue","webpack:///./src/views/project/charts/chartPanel/LineChart.vue?acd7"],"names":["ref","_createVNode","_component_a_row","justify","_component_a_button","size","onClick","_cache","$event","_ctx","kzoom","style","_createElementVNode","_hoisted_1","defineComponent","name","props","chartData","type","Object","default","chartConfig","setup","toRefs","chartRef","newChart","maxNum","watch","_chartConfig$value","drawChart","value","max","getDateStr","parseInt","hour","Math","floor","minute","xMax","Chart","container","width","autoFit","height","chart","data","config","scale","time","nice","min","tooltip","title","showCrosshairs","shared","legend","axis","text","xtitle","fontSize","label","formatter","grid","line","stroke","lineDash","ytitle","val","position","color","shape","point","render","onMounted","__exports__"],"mappings":"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","file":"static/js/chunk-2d20f309.3c93f561.js","sourcesContent":["<template>\r\n  <a-row justify=\"end\">\r\n    <a-button size=\"small\" @click=\"kzoom('l')\">拉长</a-button>\r\n    <a-button size=\"small\" @click=\"kzoom('s')\" style=\"margin-left: 8px;\">缩短</a-button>\r\n  </a-row>\r\n  <div ref=\"chartRef\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, defineComponent, onMounted, toRefs, watch, computed } from \"vue\";\r\nimport { Chart } from \"@antv/g2\";\r\n\r\nexport default defineComponent({\r\n  name: \"LineChart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    chartConfig: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  setup(props) {\r\n    const { chartData, chartConfig } = toRefs(props);\r\n    const chartRef = ref();\r\n    const newChart = ref();\r\n    const maxNum = ref(120);\r\n\r\n    watch(chartData, () => {\r\n      drawChart();\r\n      maxNum.value = chartConfig.value?.max;\r\n    })\r\n\r\n    // 把分钟数转化为 hh:mm\r\n    const getDateStr = value => {\r\n      value = parseInt(value);\r\n      let hour = Math.floor(value / 60);\r\n      let minute = value % 60;\r\n\r\n      hour = hour < 10 ? '0' + hour : hour;\r\n      minute = minute < 10 ? '0' + minute : minute;\r\n      return hour + ':' + minute;\r\n    }\r\n\r\n    const drawChart = (xMax) => {\r\n      newChart.value = newChart.value || new Chart({\r\n        container: chartRef.value,\r\n        width: '100%',\r\n        autoFit: true,\r\n        height: 350,\r\n      });\r\n\r\n      const chart = newChart.value;\r\n      chart.data(chartData.value || []);\r\n\r\n      const config = chartConfig.value || {};\r\n\r\n      chart.scale({\r\n        time: {\r\n          nice: true,\r\n          min: 0, // 起始\r\n          max: xMax || config.max || 120,\r\n        },\r\n        value: {\r\n          min: 0,\r\n          nice: true,\r\n        },\r\n      });\r\n\r\n      chart.tooltip({\r\n         title: title => getDateStr(title),\r\n        showCrosshairs: true,\r\n        shared: true,\r\n      });\r\n      chart.legend(false);\r\n\r\n      chart.axis('time', {\r\n        title: {\r\n          text: config.xtitle || '',\r\n          style: {\r\n            fontSize: 15\r\n          }\r\n        },\r\n        // line: {\r\n        //   style: {\r\n        //     stroke: '#fff',\r\n        //   }\r\n        // },\r\n        // tickLine: {\r\n        //   style: {\r\n        //     stroke: '#fff',\r\n        //   }\r\n        // },\r\n        label: {\r\n          formatter: value => getDateStr(value),\r\n          // style: {\r\n          //   stroke: '#777',\r\n          //   fontStyle: 'normal',\r\n          //   fontFamily: '宋体'\r\n          // }\r\n        },\r\n        grid: {\r\n          line: {\r\n            type: 'line',\r\n            style: {\r\n              stroke: '#aaa',\r\n              lineDash: [4, 4]\r\n            }\r\n          }\r\n        },\r\n      });\r\n\r\n      chart.axis('value', {\r\n        title: {\r\n          text: config.ytitle || '',\r\n          style: {\r\n            fontSize: 15\r\n          }\r\n        },\r\n        label: {\r\n          formatter: (val) => {\r\n            return val + ' °C';\r\n          },\r\n        },\r\n        grid: {\r\n          line: {\r\n            type: 'line',\r\n            style: {\r\n              stroke: '#aaa',\r\n              lineDash: [4, 4]\r\n            },\r\n          }\r\n        },\r\n      });\r\n\r\n      chart\r\n        .line()\r\n        .position('time*value')\r\n        .color('type')\r\n        .shape('smooth')\r\n        .size(3);\r\n\r\n      chart\r\n        .point()\r\n        .position('time*value')\r\n        .color('type')\r\n        .shape('circle')\r\n        .size(5);\r\n\r\n      chart.render();\r\n    };\r\n\r\n    onMounted(() => {\r\n      // const init = document.createEvent('Event')\r\n      // init.initEvent('resize', true, true);\r\n      // window.dispatchEvent(init);\r\n      // setTimeout(() => {\r\n      //   drawChart();\r\n      // }, 20);\r\n\r\n      drawChart();\r\n    })\r\n\r\n    const kzoom = type => {\r\n      if (type == 'l') {\r\n        maxNum.value += 30;\r\n\r\n      } else if (type == 's' && maxNum.value > 60) {\r\n        maxNum.value -= 30;\r\n      }\r\n\r\n      const chart = newChart.value;\r\n      chart.scale({\r\n        time: {\r\n          nice: true,\r\n          min: 0, // 起始\r\n          max: maxNum.value,\r\n        },\r\n        value: {\r\n          min: 0,\r\n          nice: true,\r\n        },\r\n      });\r\n\r\n      chart.render();\r\n    }\r\n\r\n    return {\r\n      chartRef,\r\n      kzoom\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n","import { render } from \"./LineChart.vue?vue&type=template&id=e66cab88\"\nimport script from \"./LineChart.vue?vue&type=script&lang=js\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Git\\\\study-package\\\\vue-study\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}